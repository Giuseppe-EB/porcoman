%move(0..3).
%move(1).
%move(3).
%position(0, 1).
end(18, 8).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%LEGEND:
%                    0 LEFT
%                    1 RIGHT
%                    2 UP
%                    3 DOWN
%                    4 BOMB

% dist( X, Y) === > Y = distanza dalla fine se mossa X
% wall( X, 0) == > muro indistrubbile a X
% wall( X, !) == > muro distruttibile a X
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
choice(M)|not_choice(M):- move(M).
:- #count{M:choice(M)}<1.


:- move(0), muro(X, Y), position(X-1, Y).
:- move(1), muro(X, Y), position(X+1, Y).
:- move(2), muro(X, Y), position(X, Y+1).
:- move(3), muro(X, Y), position(X, Y-1).

% distanza tra due punti : d( P1, P2) = sqrt((x2 - x1)^2+(y2-y1)^2)

% dist((1,1),(18,8))= sqrt 289 + 49 = 18
% dist((0, 2)), (18, 8))= sqrt 324 + 36 = 19

%d(1, 18).
%d(3, 19).



min_dist(X1, X2) :- dist(X1, Y1), dist(X2, Y2), Y1<Y2.
min(X):- min_dist( X, _), not min_dist( Y, X), move(Y).


:~ dist(X, Y), choice(X). [Y @ 1]
:~ dist(4, _), choice(4). [10 @ 1]
:~ dist(4, Y), choice(X), dist(X, Y2), Y<Y2. [1@2]

:~ bomb_dist(X, Y), choice(X), X!=4. [-Y @ 5]
:- bomb_dist(4, Y), choice(4), Y<20.

:~ enemy_dist(X, Y), choice(X). [Y @ 4]
:- enemy_dist(X, Y), choice(X), Y=10, X!=4.
:- enemy_dist(X, Y), choice(X), Y<10.
:~ enemy_dist(X, Y), choice(X), Y>10. [Y @ 4]

:~ choice(4), #count{Y:wall(X, Y)}<1, Y=1. [1 @ 3]

:- choice(X), wall(X, 1).

:~ min(X), choice(Y), Y!=4, Y!=X. [1 @ 3]


