%move(0..3).
%move(1).
%move(3).
%position(0, 1).
%mode(0).
end(18, 8).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%LEGEND:
%
%       mode:
%                    0 GOAL
%                    1 BOMB
%                    2 ENEMY
%
%       move:
%                    0 LEFT
%                    1 RIGHT
%                    2 UP
%                    3 DOWN
%                    4 BOMB

% dist( X, Y) === > Y = distanza dalla fine se mossa X
% wall( X, 0) == > muro assente a X
% wall( X, 1) == > muro distruttibile a X
% wall( X, 2) == > muro indistruttibile a X
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
choice(M)|not_choice(M):- move(M).
:- #count{M:choice(M)}<1.




% distanza tra due punti : d( P1, P2) = sqrt((x2 - x1)^2+(y2-y1)^2)


:~ mode(0), dist(X, Y), choice(X). [Y @ 1]
:~ mode(0), dist(X, 0), wall(X, 1), choice(Y), Y!=4. [3 @ 1]

:~ mode(1), bomb_dist(X, Y), choice(X). [4-Y @ 1]

%:~ bomb_dist(X, Y), choice(X), X!=4. [-Y @ 5]

%:~ enemy_dist(X, Y), choice(X). [Y @ 4]
%:- enemy_dist(X, Y), choice(X) X!=4.
%:- enemy_dist(X, Y), choice(X).
%:~ enemy_dist(X, Y), choice(X). [Y @ 4]

%:~ choice(4), #count{Y:wall(X, Y)}<1, Y=1. [1 @ 3]

:- choice(X), wall(X, 1).



